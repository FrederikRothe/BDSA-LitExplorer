@inject HttpClient Http
@inject NavigationManager NavigationManager

<div class="modal fade modal-dialog modal-dialog-centered" id="AddConnectionModal" style="display: none;" tabindex="-1" aria-labelledby="AddConnectionModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h1 class="modal-title" id="AddConnectionModalLabel">Add a connection</h1>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="clear"></button>
      </div>
      <EditForm Model="@connection" OnValidSubmit="@HandleValidSubmit">
        <div class="modal-body">

          <span style="color: var(--red);">@_errorMessage</span>
          
          <div class="dropdowns">

            <select class="form-select" @bind="connection.PaperOneId" aria-label="paper1select">
              <option disabled selected value> -- select a paper -- </option>
              @foreach (var paper in Model.Graph.allPapers)
                {
                  <option value=@paper.Id>@paper.Title</option>
                }
            </select>
            <select class="form-select" @bind="connection.PaperTwoId" aria-label="paper2select">
              <option disabled selected value> -- select a paper -- </option>
              @foreach (var paper in Model.Graph.allPapers)
                {
                  <option value=@paper.Id>@paper.Title</option>
                }
            </select>

          </div>

          <div>
            <h2>Description</h2>
            <textarea class="form-control" @bind="connection.Description" aria-label="With textarea" placeholder="write here ..."></textarea>
          </div>

          <h2>Share with a team</h2>
          <select class="form-select" @bind="_selectedTeamId" aria-label="teamselect">
              <option disabled selected value> -- select a team -- </option>
              @foreach (var team in Model.CurrentUser.teams)
                {
                  <option value=@team.Id>@team.TeamName</option>
                }
            </select>
        </div>
        <div class="modal-footer">
          <ButtonIcon  type="submit" icon="oi oi-check" tooltip="Create" data_bs_target="#AddConnectionModal" data_bs_dismiss="modal" />
        </div>
        </EditForm>
      </div>
  </div>
</div>

@code {
  private ConnectionCreateDTO connection = new();
  private string _errorMessage = string.Empty;
  private int? _selectedTeamId;
  
  [Parameter] public EventCallback refreshGraph { get; set; }
  private async Task HandleValidSubmit()
  {
    if (connection.PaperOneId == connection.PaperTwoId)
    {
      _errorMessage = "Please select two different papers.";
      return;
    }

    if (Model.CurrentUser.connectionExists(connection))
    {
      _errorMessage = "You have already created a connection between these papers.";
      return;
    }

    connection.CreatorId = Model.CurrentUser.userOid;
    connection.ConnectionType = "other";
    connection.TeamId = _selectedTeamId;

    var response = await Http.PostAsJsonAsync("api/Connection", connection);

    if (response.IsSuccessStatusCode)
    {
        _errorMessage = "";
        var created = await response.Content.ReadFromJsonAsync<ConnectionDTO>();
        if (created != null) Model.CurrentUser.connections.Add(created);
        await refreshGraph.InvokeAsync();
    } 
    else 
    {
        _errorMessage = $"An error occured.";
    }
    clear();
  }

  public void clear() 
  {
    _errorMessage = string.Empty;
    connection = new();
  }
}